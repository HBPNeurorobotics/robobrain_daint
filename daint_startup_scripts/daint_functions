#!/bin/bash
# This script holds common functions to run NRP nestserver jobs on PizDaint

##################################################################################################################
## Logging functions ###
##################################################################################################################

function create_logfolder {
    echo " ==== Creating log folder /scratch/snx3000/$USER/nrp_logs/ ===="

    mkdir /scratch/snx3000/$USER/nrp_logs

}

function goto_logs {
    echo " ==== Changing directory to nrp_logs ===="

    cd /scratch/snx3000/$USER/nrp_logs
    exec bash
}

function clean_logs {
    echo " ==== Removing all log files in /scratch/snx3000/$USER/nrp_logs/ ===="

    rm /scratch/snx3000/$USER/nrp_logs/nginx/*
    rm /scratch/snx3000/$USER/nrp_logs/nrp-services_app/*
    rm /scratch/snx3000/$USER/nrp_logs/ros-simulation-factory_app/*
    rm /scratch/snx3000/$USER/nrp_logs/rosbridge/*
    rm /scratch/snx3000/$USER/nrp_logs/roscore/*
    rm /scratch/snx3000/$USER/nrp_logs/rosvideoserver/*
    rm /scratch/snx3000/$USER/nrp_logs/virtualcoach/*
    rm /scratch/snx3000/$USER/nrp_logs/uwsgi/*
    rm /scratch/snx3000/$USER/nrp_logs/nginx_home/*
}


##################################################################################################################
## Node handling functions ###
##################################################################################################################

function get_job {
    echo " ==== Requesting Job for $1 hours ===="

    if [ -z "$1" ]; then
      echo "--- duration in hours not defined: set as parameter ---"
      exit
    else

      salloc -N1 -C 'mc&startx' -A ich004m --time=$1:00:00 --mem=120GB

      job_id=$(squeue -u bp000231 --noheader -o %A)
      echo "job id is $job_id"
      node_id=$(scontrol show jobid 28898554 | grep -m 1 -o 'nid.\{0,4\}')
      echo $node_id > 'nidnr.txt'
      echo "node is $node_id"
    fi
}

function get_nid {
    echo " ==== Getting active node no. and saving to file nidnr.txt ===="

    job_id=$(squeue -u bp000231 --noheader -o %A)
    echo "job id is $job_id"
    node_id=$(scontrol show jobid $job_id | grep -m 1 -o 'nid.\{0,5\}')
    echo $node_id > 'nidnr.txt'
    echo "node is $node_id"
}

function connect_nid {
    echo " ==== Reading active node no. from nidnr.txt file===="

    filename='nidnr.txt'
    while read line; do
    nid=$line

    echo " ==== Connecting to node no. $nid ===="

    done < $filename

    echo "nid is : $nid"

    ssh -A $nid
}

##################################################################################################################
## Startup functions ###
##################################################################################################################

function start_nrp_backend {
    echo " ==== Starting nrp backend sarus container ===="

    srun -v --account ich004m -C mc -N1 -n1 /apps/daint/system/opt/sarus/1.1.0/bin/sarus run \
        --mount=type=bind,source=/etc/opt/slurm/slurm.conf,dst=/usr/local/etc/slurm.conf \
        --mount=type=bind,source=/var/run/munge/munge.socket.2,dst=/var/run/munge/munge.socket.2 \
        --mount=type=bind,source=/scratch/snx3000/$USER,dst=/scratch/snx3000/$USER \
        --mount=type=bind,source=/tmp/.X11-unix,destination=/tmp/.X11-unix \
        --mount=type=bind,source=$HOME,dst=$HOME \
        --mount=type=bind,source=/scratch/snx3000/$USER/nrp_logs/nginx,dst=/var/log/supervisor/nginx \
        --mount=type=bind,source=/scratch/snx3000/$USER/nrp_logs/nrp-services_app,dst=/var/log/supervisor/nrp-services_app \
        --mount=type=bind,source=/scratch/snx3000/$USER/nrp_logs/ros-simulation-factory_app,dst=/var/log/supervisor/ros-simulation-factory_app \
        --mount=type=bind,source=/scratch/snx3000/$USER/nrp_logs/rosbridge,dst=/var/log/supervisor/rosbridge \
        --mount=type=bind,source=/scratch/snx3000/$USER/nrp_logs/roscore,dst=/var/log/supervisor/roscore \
        --mount=type=bind,source=/scratch/snx3000/$USER/nrp_logs/rosvideoserver,dst=/var/log/supervisor/rosvideoserver \
        --mount=type=bind,source=/scratch/snx3000/$USER/nrp_logs/virtualcoach,dst=/var/log/supervisor/virtualcoach \
        --mount=type=bind,source=/scratch/snx3000/$USER/nrp_logs/uwsgi,dst=/var/log/supervisor/uwsgi \
        --mount=type=bind,source=/scratch/snx3000/$USER/nrp_logs/nginx_home,dst=/home_daint/bbpnrsoa/nginx \
        benefe23/nrp_with_nest_client:wip_update_yml_sunday_robobrain\
        bash -c "\
        unset LD_PRELOAD; rm /usr/lib/libmpi.so.12; rm /usr/lib/libmpi.so.12.0.2; ln -s /usr/lib/libmpi.so.12.0.5 /usr/lib/libmpi.so.12; \
        export LD_LIBRARY_PATH=/usr/lib:$LD_LIBRARY_PATH; \
        export LD_LIBRARY_PATH=/usr/lib:$LD_LIBRARY_PATH; \
        \
        export LC_ALL=C; unset LANGUAGE; \
        source /home_daint/bbpnrsoa/nrp/src/user-scripts/nrp_variables; \
        \
        sed -i 's|<STORAGE_ADDR>|148.187.96.212|' /home_daint/bbpnrsoa/nrp/src/ExDBackend/hbp_nrp_commons/hbp_nrp_commons/workspace/Settings.py; \
        sed -i 's|= MPILauncher|= DaintLauncher|' /home_daint/bbpnrsoa/nrp/src/BrainSimulation/hbp_nrp_distributed_nest/hbp_nrp_distributed_nest/launch/NestLauncher.py; \
        sed -i 's|sys.executable|\\\"/home_daint/bbpnrsoa/.opt/platform_venv/bin/python\\\"|' /home_daint/bbpnrsoa/nrp/src/BrainSimulation/hbp_nrp_distributed_nest/hbp_nrp_distributed_nest/launch/NestLauncher.py; \
        sed -i 's|$VGLRUN|xvfb-run -a --server-args=\\\"-screen 0 1280x1024x24\\\"|' /home_daint/bbpnrsoa/.opt/bbp/nrp-services/gzserver; \
        sed -i 's|--pause|--pause --software_only_rendering|' /home_daint/bbpnrsoa/.opt/bbp/nrp-services/gzserver; \
        grep -n 'URI' /home_daint/bbpnrsoa/nrp/src/ExDBackend/hbp_nrp_commons/hbp_nrp_commons/workspace/Settings.py; \
        grep -n 'socket' /home_daint/bbpnrsoa/.local/etc/nginx/conf.d/nrp-services.conf; \
        grep -n 'auth' /home_daint/bbpnrsoa/.local/etc/nginx/conf.d/nrp-services.conf; \
        grep -n 'socket' /home_daint/bbpnrsoa/.local/etc/nginx/uwsgi-nrp.ini; \
        grep -n 'DaintLauncher' /home_daint/bbpnrsoa/nrp/src/BrainSimulation/hbp_nrp_distributed_nest/hbp_nrp_distributed_nest/launch/NestLauncher.py; \
        which srun; \
        cat /home_daint/bbpnrsoa/nrp/src/BrainSimulation/hbp_nrp_distributed_nest/hbp_nrp_distributed_nest/launch/DaintLauncher.py; \
        \
        /etc/init.d/supervisor start; \
        sleep 50000000; \
        ps uxa | grep python; \
        netstat -tulpen | grep 8080; \
        cat /var/log/supervisor/supervisord.log; \
        cat /var/log/supervisor/nrp-services_app/**; \
        cat /var/log/supervisor/ros-simulation-factory_app/**;"
}


function start_tunneling {
    ssh -i $HOME/key-tunneluser -o StrictHostKeyChecking=no -R 0.0.0.0:8080:localhost:8080 -R 0.0.0.0:5000:localhost:5000 -TN tunneluser@148.187.97.12
}

function start_nestserver {
    echo " ==== Starting nest server in sarus container ===="

    module load sarus
    sarus run --tty --mount=type=bind,source=$HOME,dst=$HOME \
        christopherbignamini/nestsim:benedikt_restricted_python \
        /bin/bash -c \
            "ln -s $HOME/robobrain_nrp/nrp_experiment/robobrain_mouse_exp/resources /opt/data; \
            . /opt/nest/bin/nest_vars.sh; \
            nest-server start -o; bash"
}


function start_htop {
    echo " ==== Starting htop in sarus container ===="

    module load sarus
    sarus run --tty benefe23/ubuntu_htop /bin/bash -c "htop"
}
